import {
  getInitialPopperStyles,
  getOverlayDirection
} from "./chunk-FIFFOFPL.js";
import {
  require_classnames,
  useBootstrapPrefix,
  useIsRTL
} from "./chunk-KCGCTW7L.js";
import {
  require_jsx_runtime
} from "./chunk-35YZCWFM.js";
import {
  __toESM,
  require_react
} from "./chunk-OMFGQDFA.js";

// node_modules/react-bootstrap/esm/Tooltip.js
var import_classnames = __toESM(require_classnames());
var React = __toESM(require_react());
var import_jsx_runtime = __toESM(require_jsx_runtime());
var import_jsx_runtime2 = __toESM(require_jsx_runtime());
var defaultProps = {
  placement: "right"
};
var Tooltip = React.forwardRef(({
  bsPrefix,
  placement,
  className,
  style,
  children,
  arrowProps,
  hasDoneInitialMeasure,
  popper,
  show,
  ...props
}, ref) => {
  bsPrefix = useBootstrapPrefix(bsPrefix, "tooltip");
  const isRTL = useIsRTL();
  const [primaryPlacement] = (placement == null ? void 0 : placement.split("-")) || [];
  const bsDirection = getOverlayDirection(primaryPlacement, isRTL);
  let computedStyle = style;
  if (show && !hasDoneInitialMeasure) {
    computedStyle = {
      ...style,
      ...getInitialPopperStyles(popper == null ? void 0 : popper.strategy)
    };
  }
  return (0, import_jsx_runtime2.jsxs)("div", {
    ref,
    style: computedStyle,
    role: "tooltip",
    "x-placement": primaryPlacement,
    className: (0, import_classnames.default)(className, bsPrefix, `bs-tooltip-${bsDirection}`),
    ...props,
    children: [(0, import_jsx_runtime.jsx)("div", {
      className: "tooltip-arrow",
      ...arrowProps
    }), (0, import_jsx_runtime.jsx)("div", {
      className: `${bsPrefix}-inner`,
      children
    })]
  });
});
Tooltip.defaultProps = defaultProps;
Tooltip.displayName = "Tooltip";
var Tooltip_default = Tooltip;

export {
  Tooltip_default
};
//# sourceMappingURL=chunk-TKA56QS3.js.map
