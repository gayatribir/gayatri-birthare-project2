{
  "version": 3,
  "sources": ["../../@restart/hooks/esm/useUpdatedRef.js", "../../@restart/hooks/esm/useWillUnmount.js", "../../@restart/ui/esm/useWaitForDOMRef.js", "../../@restart/ui/esm/ImperativeTransition.js", "../../@restart/ui/esm/NoopTransition.js", "../../dom-helpers/esm/hasClass.js"],
  "sourcesContent": ["import { useRef } from 'react';\n/**\n * Returns a ref that is immediately updated with the new value\n *\n * @param value The Ref value\n * @category refs\n */\n\nexport default function useUpdatedRef(value) {\n  var valueRef = useRef(value);\n  valueRef.current = value;\n  return valueRef;\n}", "import useUpdatedRef from './useUpdatedRef';\nimport { useEffect } from 'react';\n/**\n * Attach a callback that fires when a component unmounts\n *\n * @param fn Handler to run when the component unmounts\n * @category effects\n */\n\nexport default function useWillUnmount(fn) {\n  var onUnmount = useUpdatedRef(fn);\n  useEffect(function () {\n    return function () {\n      return onUnmount.current();\n    };\n  }, []);\n}", "import ownerDocument from 'dom-helpers/ownerDocument';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport { useState, useEffect } from 'react';\nimport useWindow from './useWindow';\nexport const resolveContainerRef = (ref, document) => {\n  if (!canUseDOM) return null;\n  if (ref == null) return (document || ownerDocument()).body;\n  if (typeof ref === 'function') ref = ref();\n  if (ref && 'current' in ref) ref = ref.current;\n  if (ref && ('nodeType' in ref || ref.getBoundingClientRect)) return ref;\n  return null;\n};\nexport default function useWaitForDOMRef(ref, onResolved) {\n  const window = useWindow();\n  const [resolvedRef, setRef] = useState(() => resolveContainerRef(ref, window == null ? void 0 : window.document));\n  if (!resolvedRef) {\n    const earlyRef = resolveContainerRef(ref);\n    if (earlyRef) setRef(earlyRef);\n  }\n  useEffect(() => {\n    if (onResolved && resolvedRef) {\n      onResolved(resolvedRef);\n    }\n  }, [onResolved, resolvedRef]);\n  useEffect(() => {\n    const nextRef = resolveContainerRef(ref);\n    if (nextRef !== resolvedRef) {\n      setRef(nextRef);\n    }\n  }, [ref, resolvedRef]);\n  return resolvedRef;\n}", "import useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useIsomorphicEffect from '@restart/hooks/useIsomorphicEffect';\nimport React, { useRef, cloneElement, useState } from 'react';\nimport NoopTransition from './NoopTransition';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useTransition({\n  in: inProp,\n  onTransition\n}) {\n  const ref = useRef(null);\n  const isInitialRef = useRef(true);\n  const handleTransition = useEventCallback(onTransition);\n  useIsomorphicEffect(() => {\n    if (!ref.current) {\n      return undefined;\n    }\n    let stale = false;\n    handleTransition({\n      in: inProp,\n      element: ref.current,\n      initial: isInitialRef.current,\n      isStale: () => stale\n    });\n    return () => {\n      stale = true;\n    };\n  }, [inProp, handleTransition]);\n  useIsomorphicEffect(() => {\n    isInitialRef.current = false;\n    // this is for strict mode\n    return () => {\n      isInitialRef.current = true;\n    };\n  }, []);\n  return ref;\n}\n/**\n * Adapts an imperative transition function to a subset of the RTG `<Transition>` component API.\n *\n * ImperativeTransition does not support mounting options or `appear` at the moment, meaning\n * that it always acts like: `mountOnEnter={true} unmountOnExit={true} appear={true}`\n */\nexport default function ImperativeTransition({\n  children,\n  in: inProp,\n  onExited,\n  onEntered,\n  transition\n}) {\n  const [exited, setExited] = useState(!inProp);\n\n  // TODO: I think this needs to be in an effect\n  if (inProp && exited) {\n    setExited(false);\n  }\n  const ref = useTransition({\n    in: !!inProp,\n    onTransition: options => {\n      const onFinish = () => {\n        if (options.isStale()) return;\n        if (options.in) {\n          onEntered == null ? void 0 : onEntered(options.element, options.initial);\n        } else {\n          setExited(true);\n          onExited == null ? void 0 : onExited(options.element);\n        }\n      };\n      Promise.resolve(transition(options)).then(onFinish, error => {\n        if (!options.in) setExited(true);\n        throw error;\n      });\n    }\n  });\n  const combinedRef = useMergedRefs(ref, children.ref);\n  return exited && !inProp ? null : /*#__PURE__*/cloneElement(children, {\n    ref: combinedRef\n  });\n}\nexport function renderTransition(Component, runTransition, props) {\n  if (Component) {\n    return /*#__PURE__*/_jsx(Component, Object.assign({}, props));\n  }\n  if (runTransition) {\n    return /*#__PURE__*/_jsx(ImperativeTransition, Object.assign({}, props, {\n      transition: runTransition\n    }));\n  }\n  return /*#__PURE__*/_jsx(NoopTransition, Object.assign({}, props));\n}", "import useEventCallback from '@restart/hooks/useEventCallback';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport { cloneElement, useEffect, useRef } from 'react';\nfunction NoopTransition({\n  children,\n  in: inProp,\n  onExited,\n  mountOnEnter,\n  unmountOnExit\n}) {\n  const ref = useRef(null);\n  const hasEnteredRef = useRef(inProp);\n  const handleExited = useEventCallback(onExited);\n  useEffect(() => {\n    if (inProp) hasEnteredRef.current = true;else {\n      handleExited(ref.current);\n    }\n  }, [inProp, handleExited]);\n  const combinedRef = useMergedRefs(ref, children.ref);\n  const child = /*#__PURE__*/cloneElement(children, {\n    ref: combinedRef\n  });\n  if (inProp) return child;\n  if (unmountOnExit) {\n    return null;\n  }\n  if (!hasEnteredRef.current && mountOnEnter) {\n    return null;\n  }\n  return child;\n}\nexport default NoopTransition;", "/**\n * Checks if a given element has a CSS class.\n * \n * @param element the element\n * @param className the CSS class name\n */\nexport default function hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);\n  return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}"],
  "mappings": "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",
  "names": ["import_react", "import_react", "import_react", "import_react", "_jsx"]
}
